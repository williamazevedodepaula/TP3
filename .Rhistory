install.packages("ExpDE")
library(ExpDE)
install.packages("ExpDE")
library(ExpDE)
install.packages("ExpDE")
library(ExpDE)
selpars  <- list(name  = "selection_standard")
stopcrit <- list(names = "stop_maxeval", maxevals = 50000, maxiter = 1000)
probpars <- list(name  = "sphere", xmin  = -seq(1,20), xmax  = 20 + 5 * seq(5, 24))
recpars1 <- list(name = "recombination_blxAlphaBeta", alpha = 0, beta = 0)
mutpars1 <- list(name = "mutation_rand", f = 4)
popsize1 <- 200
recpars2 <- list(name = "recombination_exp", cr = 0.6)
mutpars2 <- list(name = "mutation_best", f = 2)
popsize2 <- 130
recpars3 <- list(name = "recombination_blxAlphaBeta", alpha = 0.4, beta = 0.4)
mutpars3 <- list(name = "mutation_rand", f = 4)
popsize3 <- 230
recpars4 <- list(name = "recombination_wright")
mutpars4 <- list(name = "mutation_best", f = 4.8)
popsize4 <- 113
out <- ExpDE(popsize  = popsize1,
mutpars  = mutpars1,
recpars  = recpars1,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
out$Fbest
out <- ExpDE(popsize  = popsize1,
mutpars  = mutpars1,
recpars  = recpars1,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out$Fbest
out <- ExpDE(popsize  = popsize1,
mutpars  = mutpars1,
recpars  = recpars1,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out$Fbest
out <- ExpDE(popsize  = popsize1,
mutpars  = mutpars1,
recpars  = recpars1,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out$Fbest
out <- ExpDE(popsize  = popsize1,
mutpars  = mutpars1,
recpars  = recpars1,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out$Fbest
out <- ExpDE(popsize  = popsize1,
mutpars  = mutpars1,
recpars  = recpars1,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out$Fbest
# Run algorithm on problem:
out <- ExpDE(popsize  = popsize2,
mutpars  = mutpars2,
recpars  = recpars2,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out$Fbest
# Run algorithm on problem:
out <- ExpDE(popsize  = popsize2,
mutpars  = mutpars2,
recpars  = recpars2,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out$Fbest
# Run algorithm on problem:
out <- ExpDE(popsize  = popsize2,
mutpars  = mutpars2,
recpars  = recpars2,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out$Fbest
# Run algorithm on problem:
out <- ExpDE(popsize  = popsize2,
mutpars  = mutpars2,
recpars  = recpars2,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out$Fbest
# Run algorithm on problem:
out <- ExpDE(popsize  = popsize2,
mutpars  = mutpars2,
recpars  = recpars2,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out$Fbest
# Run algorithm on problem:
out <- ExpDE(popsize  = popsize2,
mutpars  = mutpars2,
recpars  = recpars2,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out$Fbest
# Run algorithm on problem:
out1 <- ExpDE(popsize  = popsize1,
mutpars  = mutpars1,
recpars  = recpars1,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out1$Fbest
# Run algorithm on problem:
out2 <- ExpDE(popsize  = popsize2,
mutpars  = mutpars2,
recpars  = recpars2,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out2$Fbest
# Run algorithm on problem:
out3 <- ExpDE(popsize  = popsize3,
mutpars  = mutpars3,
recpars  = recpars3,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out3$Fbest
# Run algorithm on problem:
out4 <- ExpDE(popsize  = popsize4,
mutpars  = mutpars4,
recpars  = recpars4,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out4$Fbest
Numero_it<-10
result_out1<-list()
result_out2<-list()
result_out3<-list()
result_out4<-list()
for (i in 1:Numero_it) {
out1 <- ExpDE(popsize  = popsize1,
mutpars  = mutpars1,
recpars  = recpars1,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out1$Fbest
# Run algorithm on problem:
out2 <- ExpDE(popsize  = popsize2,
mutpars  = mutpars2,
recpars  = recpars2,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out2$Fbest
# Run algorithm on problem:
out3 <- ExpDE(popsize  = popsize3,
mutpars  = mutpars3,
recpars  = recpars3,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out3$Fbest
# Run algorithm on problem:
out4 <- ExpDE(popsize  = popsize4,
mutpars  = mutpars4,
recpars  = recpars4,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out4$Fbest
result_out1[[i]]<-(out1$Fbest)
result_out2[[i]]<-(out2$Fbest)
result_out3[[i]]<-(out3$Fbest)
result_out4[[i]]<-(out4$Fbest)
}
result_out3
a<-4
k<-(a*(a-2))/2
k<-(a*(a-1))/2
alpha<-0.05
alpha_adj<-alpha/k
a<-4
k<-(a*(a-1))/2
alpha<-0.05
alpha_adj<-alpha/k
delta<-10
potencia_desejada<-0.85
sd<-40
test_pow_N <- power.t.test(delta = delta, power = potencia_desejada, sd = sd, sig.level = alpha_adj, alternative = "two.sided", type = "two.sample")
print(test_pow_N)
Numero_it<-484
result_out1<-list()
result_out2<-list()
result_out3<-list()
result_out4<-list()
for (i in 1:Numero_it) {
out1 <- ExpDE(popsize  = popsize1,
mutpars  = mutpars1,
recpars  = recpars1,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out1$Fbest
# Run algorithm on problem:
out2 <- ExpDE(popsize  = popsize2,
mutpars  = mutpars2,
recpars  = recpars2,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out2$Fbest
# Run algorithm on problem:
out3 <- ExpDE(popsize  = popsize3,
mutpars  = mutpars3,
recpars  = recpars3,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out3$Fbest
# Run algorithm on problem:
out4 <- ExpDE(popsize  = popsize4,
mutpars  = mutpars4,
recpars  = recpars4,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out4$Fbest
result_out1[[i]]<-(out1$Fbest)
result_out2[[i]]<-(out2$Fbest)
result_out3[[i]]<-(out3$Fbest)
result_out4[[i]]<-(out4$Fbest)
}
a<-4
k<-(a*(a-1))/2
alpha_adj<-alpha/k
delta<-1
potencia_desejada<-0.85
sd<-4
test_pow_N <- power.t.test(delta = delta, power = potencia_desejada, sd = sd, sig.level = alpha_adj, alternative = "two.sided", type = "two.sample")
print(test_pow_N)
a<-4
k<-(a*(a-1))/2
alpha<-0.05
alpha_adj<-alpha/k
delta<-10
potencia_desejada<-0.85
sd<-40
test_pow_N <- power.t.test(delta = delta, power = potencia_desejada, sd = sd, sig.level = alpha_adj, alternative = "two.sided", type = "two.sample")
print(test_pow_N)
result_out4
# Run algorithm on problem:
Numero_it<-484
result_out1<-list()
result_out2<-list()
result_out3<-list()
result_out4<-list()
for (i in 1:Numero_it) {
out1 <- ExpDE(popsize  = popsize1,
mutpars  = mutpars1,
recpars  = recpars1,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out1$Fbest
# Run algorithm on problem:
out2 <- ExpDE(popsize  = popsize2,
mutpars  = mutpars2,
recpars  = recpars2,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out2$Fbest
# Run algorithm on problem:
out3 <- ExpDE(popsize  = popsize3,
mutpars  = mutpars3,
recpars  = recpars3,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out3$Fbest
# Run algorithm on problem:
out4 <- ExpDE(popsize  = popsize4,
mutpars  = mutpars4,
recpars  = recpars4,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out4$Fbest
result_out1[[i]]<-(out1$Fbest)
result_out2[[i]]<-(out2$Fbest)
result_out3[[i]]<-(out3$Fbest)
result_out4[[i]]<-(out4$Fbest)
}
Numero_it<-434
result_out1<-list()
result_out2<-list()
result_out3<-list()
result_out4<-list()
for (i in 1:Numero_it) {
out1 <- ExpDE(popsize  = popsize1,
mutpars  = mutpars1,
recpars  = recpars1,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out1$Fbest
# Run algorithm on problem:
out2 <- ExpDE(popsize  = popsize2,
mutpars  = mutpars2,
recpars  = recpars2,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out2$Fbest
# Run algorithm on problem:
out3 <- ExpDE(popsize  = popsize3,
mutpars  = mutpars3,
recpars  = recpars3,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out3$Fbest
# Run algorithm on problem:
out4 <- ExpDE(popsize  = popsize4,
mutpars  = mutpars4,
recpars  = recpars4,
selpars  = selpars,
stopcrit = stopcrit,
probpars = probpars,
showpars = list(show.iters = "dots",
showevery  = 20))
# Extract observation:
out4$Fbest
result_out1[[i]]<-(out1$Fbest)
result_out2[[i]]<-(out2$Fbest)
result_out3[[i]]<-(out3$Fbest)
result_out4[[i]]<-(out4$Fbest)
}
result_total<-data.frame(out1=(unlist(result_out1)),out2=(unlist(result_out2)),out3=(unlist(result_out3)),out4=(unlist(result_out4)))
View(result_total)
result_total1<-cbind.data.frame(colnames(result_total),result_total)
result_total1<-rbind.data.frame(colnames(result_total),result_total)
View(result_total1)
library(reshape)
result_ini<-melt(result_total, id= c("out1"))
View(result_ini)
result_total<-data.frame(out1=(unlist(result_out1)),out2=(unlist(result_out2)),out3=(unlist(result_out3)),out4=(unlist(result_out4)))
library(reshape)
result_ini<-melt(result_total, id= c("out1","out2","out3","out4"))
View(result_ini)
result_ini<-melt(result_total, id= c("out1"))
result_ini<-melt(result_total, id= c("ss"))
result_ini<-unpivot(result_total)
install.packages("quantable")
install.packages("quantable")
source('C:/Users/payo/Dropbox/Planejamento_Paisas_2017/TP3/Cod_TP3.R', encoding = 'UTF-8')
View(dados_total)
View(dados_total)
write.csv(dados_total, file = "dados_total.csv")
setwd("C:/Users/payo/Dropbox/Planejamento_Paisas_2017/TP3")
write.csv(dados_total, file = "dados_total.csv")
